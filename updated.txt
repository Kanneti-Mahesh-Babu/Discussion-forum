const con = require('./db');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken')

const express = require('express');
// const bodyParser = require('body-parser');
const app = express();


app.use(express.json());
// app.use(bodyParser.json())
// app.use(bodyParser.urlencoded({extended:true}))

 
//CORS POLICIES FOR NODEJS...//
 app.use(function (req, res, next) {
    res.setHeader("Access-Control-Allow-Origin","*");
    res.setHeader("Access-Control-Allow-Methods","*");
    res.setHeader("Access-Control-Allow-Headers","*");

    next();
 })



 //NEW USERS REGISTRATION (POST).....SERVER AND DB//
 app.post('/register', (req,res)=>{
    try{
            let data = req.body;
    // let fullname= req.body.fullname;
    // let email = req.body.email;
    // let mobile = req.body.mobile;
    // let password = req.body.password;
    const {fullname,email,mobile,password} =req.body;

    //EXISTING USER CHECKING...
    const exist = con.query("SELECT EMAIL FROM new_users WHERE email=('"+req.body.email+"')",(err,data)=>{
        if(err) return err;
        if(data.length) return res.status(400).send('User Already Registered!');
        if(email===""||mobile===""||password===""||fullname===""){
            return res.status(403).send('Enter Valid Details!')
        }

        // //HASH THE PASSWORD AND CREATE USER NEW..
        // const salt = bcrypt.genSaltSync(10);
        // const hash = bcrypt.hashSync(req.body.password,salt);

        //ELSE CREATING NEW USER...
        let newUser = con.query("INSERT INTO new_users(fullname,email,mobile,password) VALUES ('"+req.body.fullname+"','"+req.body.email+"','"+req.body.mobile+"','"+req.body.password+"')",(err,result)=>{
            if (err) return err;
            return res.status(200).send('User Registered Successfully!')
        })


    });
  
}
    catch (err){
        console.log(err);
        return res.status(500).send('Server Error');

    }


})






//USER LOGIN (POST) PAGE DETAILS...
app.post('/login',(req,res)=>{

    try{
        var {email,password} = req.body;


    const exist = con.query("SELECT * FROM new_users WHERE email=('"+req.body.email+"')",(err,data)=>{

        //CHECKING PASSWORD WHILE REGISTERED!...

const user = {id:req.body.email};
const token = jwt.sign({user},'mykey',{expiresIn:360000000},
        (err,token)=>{
            if(err)return err;
            if(data.length===0) return res.status(404).send('User Not Exist!');
            return res.json({token:token});
        }

)



    });






    }
catch(err){
    console.log(err);
    return res.status(500).send('Server Error');
}




    let data = req.body;


    console.log(data);
    con.query("INSERT INTO login_users(email,password) VALUES ('"+email+"','"+password+"')",(err,result)=>{

        if(err) throw res.status(400).send(err);
         res.status(200).send(result);
    })
})


//USER CREATE (POST) PAGE DETAILS...
app.post('/posts',(req,res)=>{
    let data = req.body;
    const {fname,query} = req.body;

    console.log(data);
    con.query("INSERT INTO posts(name,query) VALUES ('"+fname+"','"+query+"')",(err,result)=>{

        if(err) throw res.status(400).send(err);
         res.status(200).send(result);
    })
})

//USER CREATE (COMMENTS) PAGE DETAILS...
app.post('/comments',(req,res)=>{
    let data = req.body;
    const {cname,postComment} = req.body;

    console.log(data);
    con.query("INSERT INTO comments(name,comments) VALUES ('"+cname+"','"+postComment+"')",(err,result)=>{

        if(err) throw res.status(400).send(err);
         res.status(200).send(result);
    })
})







//TO CHECK NEW (OR) REGISTERED USERS LIST (GET)...
app.get('/new-users',(req,res)=>{
    con.query('SELECT * FROM new_users',(err,result)=>{
        if(err) throw res.status(400).send(err);
        res.status(200).send(result);
    })
    
})


//TO CHECK LOGIN USERS LIST (GET)...
app.get('/login-users',(req,res)=>{
    con.query('SELECT * FROM login_users',(err,result)=>{
        if(err) throw res.status(400).send(err);
        res.status(200).send(result);
    })
    
})


//TO CHECK POSTS USERS LIST ....//

app.get('/users-posts',(req,res)=>{
    con.query('SELECT * FROM posts',(err,result)=>{
        if(err) throw res.status(400).send(err);
        res.status(200).send(result);
    })
    
})


//TO CHECK COMMENTS USERS LIST ....//

app.get('/users-comments',(req,res)=>{
    con.query('SELECT * FROM comments',(err,result)=>{
        if(err) throw res.status(400).send(err);
        res.status(200).send(result);
    })
    
})



//ADMIN LOGIN (POST) PAGE DETAILS...
app.post('/admin',(req,res)=>{
    let data = req.body;
    const {email,password} = req.body;

    console.log(data);
    con.query("INSERT INTO admin_users(email,password) VALUES ('"+email+"','"+password+"')",(err,result)=>{

        if(err) throw res.status(400).send(err);
         res.status(200).send(result);
    })
})





//ADMIN DELETE (POST) PAGE DETAILS...

app.delete('/admin/delete/:id',(req,res)=>{
    const id = req.params.id;

    console.log("DELETE ID: "+ id);
    con.query("DELETE from posts WHERE id=('"+id+"')",(err,result)=>{
        if(err) throw res.status(400).send(err);
         res.status(200).send(result);
    })
})








app.listen(8000,()=>{console.log(`Server is Running...`)})



/*   //EXISTING USER CHECKING...
const exist = "SELECT EMAIL FROM new_users WHERE email= ?";

    

con.query(exist,[req.body.email],(err,data)=>{
    
    if(data.length) res.status(400).send('User Registered Already');

    // if(email===""||mobile===""||password===""||fullname===""){
    //     return res.status(403).send('Enter Valid Details!')
    // }

    //ELSE CREATING NEW USER...
    const newUser = con.query("INSERT INTO new_users(fullname,email,mobile,password) VALUES ('"+req.body.fullname+"','"+req.body.email+"','"+req.body.mobile+"','"+req.body.password+"')",(err,result)=>{
        if (err) return err;
        return res.status(200).send('User Registered Successfully!')
    })

    
})



*/